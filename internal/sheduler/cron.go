package sheduler

import (
	"github.com/robfig/cron/v3"
	"log/slog"
	"time"
)

// QuoteJob представляет задачу, которую будет выполнять планировщик.
// Внутри хранится функция task, которую мы передаём при инициализации.
type QuoteJob struct {
	Task func() // Задача, которую нужно выполнить по расписанию
}

// Run — метод, вызываемый планировщиком при наступлении времени выполнения задачи.
func (q QuoteJob) Run() {
	// Логируем запуск задачи с текущим временем
	slog.Info("Задача отправки цитаты запущена", slog.Time("time", time.Now()))

	// Выполняем переданную функцию задачи
	q.Task()
}

// InitScheduler инициализирует планировщик cron и добавляет задачу с указанным cron-выражением.
func InitScheduler(cronExpr string, task func()) *cron.Cron {
	// Создаём новый планировщик cron
	c := cron.New()

	// Добавляем задачу в планировщик. Она будет запускаться согласно cron-выражению.
	_, err := c.AddJob(cronExpr, QuoteJob{Task: task})
	if err != nil {
		// Логируем ошибку, если задача не была добавлена
		slog.Error("Не удалось добавить задачу в планировщик", slog.String("error", err.Error()))
	}

	// Запускаем планировщик (он будет работать в отдельной горутине)
	c.Start()

	// Возвращаем ссылку на планировщик (можно использовать для остановки или управления)
	return c
}
